/* BACKUP FILE - VideoGridLayout.css - WORKING VERSION 2025
 * Core layout styles for all video grid modes (self, dyad, triad, quad, kiva, community)
 * Handles responsive layouts, aspect ratios, and video tile positioning
 * Critical for maintaining proper UI layout across all view modes
 */

/*
  The .video-row, .left-nav, and .video-grid are always exactly calc(50vh - 40px) tall.
  The header/title bar above is fixed at 40px and is NOT included in the 50vh; only the nav+grid area is calc(50vh - 40px).
  The video uses object-fit: contain to ensure proper grid containment (allows pillarboxing).
*/

/* Remove all padding, margin, and border. Ensure full responsive fill. */

.video-row,
.video-grid,
.video-tile {
  box-sizing: border-box;
  margin: 0 !important;
  padding: 0 !important;
  /* border: none !important; */
}

.video-row {
  display: flex;
  width: 100%;
  height: calc(100vh - 200px); /* Full height minus AppLayout header/navigation */
  min-height: 400px; /* Minimum height for proper video display */
  max-height: calc(100vh - 200px);
  background: #000;
}

.left-nav {
  width: 64px;
  height: 100%;
  background: #fff;
  border-right: 1px solid #ddd;
  display: flex;
  flex-direction: column;
  margin: 0;
  padding: 0;
}

.video-grid {
  display: grid;
  width: 100%;
  height: 100%;
  background: #000;
  gap: 8px;
  align-items: center;
  justify-items: center;
}

.video-tile {
  position: relative;
  width: 100%;
  height: 100%;
  min-height: 0;
  min-width: 0;
  overflow: visible;
}

.video-tile video,
.video-tile img {
  width: 100% !important;
  height: 100% !important;
  object-fit: fill !important;
  object-position: center !important;
  background: #000;
  display: block;
  min-width: 0 !important;
  min-height: 0 !important;
  max-width: 100% !important;
  max-height: 100% !important;
  flex-shrink: 1 !important;
  flex-grow: 1 !important;
}

/* Self view specific styling */
.self-view {
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
}

.self-view-tile {
  aspect-ratio: 16/9;
  width: 100%;
  height: 100%;
  max-width: 100%;
  max-height: 100%;
}

/* Dyad view specific styling */
.dyad-view {
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
  min-height: 400px; /* Ensure proper height for dyad tiles */
}

.dyad-view .video-tile {
  min-height: 300px; /* Minimum height for each dyad video tile */
  aspect-ratio: 16/9; /* Maintain proper video aspect ratio */
}

/* Triad view specific styling */
.triad-view {
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr;
  aspect-ratio: 9/12;
}

.triad-view-tile {
  width: 100%;
  height: 100%;
  min-height: 0;
  min-width: 0;
}

/* Quad view specific styling */
.quad-view {
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr;
}

.quad-view-tile {
  width: 100%;
  height: 100%;
  min-height: 0;
  min-width: 0;
}

/* Kiva view specific styling */
.kiva-view {
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr;
  gap: 1px;
  background: #222;
}

.kiva-view-tile {
  width: 100%;
  height: 100%;
  min-height: 0;
  min-width: 0;
}

/* Community view specific styling */
.community-view {
  grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
  grid-template-rows: 1fr;
}

/* Video grid wrapper for layout-specific containers */
.video-grid-wrapper {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.video-grid-wrapper.quad-view {
  aspect-ratio: 2/1;
  max-height: 100vh;
  max-width: 100vw;
  margin: auto;
}

.video-grid-wrapper.kiva-view {
  max-width: 100vw;
  max-height: 100vh;
  margin: auto;
}

.video-grid-wrapper.triad-view {
  max-width: 100vw;
  max-height: 100vh;
  margin: auto;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .video-grid {
    gap: 4px;
  }
  
  .triad-view {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1fr 1fr;
    aspect-ratio: auto;
  }
  
  .kiva-view {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr;
  }
}

@media (max-width: 480px) {
  .video-grid {
    gap: 2px;
  }
  
  .dyad-view {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1fr;
  }
  
  .quad-view {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1fr 1fr 1fr;
  }
}

/* Remove pink debug border from mock tiles */
.video-tile .mock-debug-border {
  border: none !important;
}

/* Force cover behavior to prevent letterboxing */
.video-tile,
.video-tile > video,
.video-tile > img {
  object-fit: cover !important;
}

.video-tile.self-view-tile {
  max-width: 900px;
  aspect-ratio: 16/9;
  width: 100%;
  height: 100%;
  margin: auto;
  background: #111;
  display: flex;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
}

.video-tile.quad-view-tile {
  /* Remove fixed aspect ratio to prevent letterboxing */
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  width: 100%;
  height: 100%;
}

.video-grid.quad-view,
.video-grid.kiva-view,
.video-grid.triad-view,
.video-grid.dyad-view {
  gap: 1px;
}

.video-grid-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  max-width: 100vw;
  max-height: 100%;
  margin: auto;
  background: #000;
}

.video-grid-wrapper.self-view {
  aspect-ratio: 16/9;
}

/* Remove fixed aspect ratios for multi-tile views to prevent letterboxing */
.video-grid-wrapper.quad-view,
.video-grid-wrapper.kiva-view,
.video-grid-wrapper.triad-view,
.video-grid-wrapper.dyad-view {
  /* Let the grid determine its own aspect ratio based on content */
} 